%{
	#include "struct.h"
	#include "linkedlist/linkedlist.h"
	int n=0, count=0, ext=0;
	LinkedList lpags;
%}

%option noyywrap

%x PAGE TITLE REVISION DATE AUTHOR LINKINT LINKEXT SECTION SUBSECTION

trash .|[\n\t\r]

%%
	Pagina pag = NULL;
	system("mkdir -p pages; cp -R html/ pages");

"<page>" {
	BEGIN PAGE; pag = inicializaPagina();
}

<PAGE>{
	"<title>" 		BEGIN TITLE;
	"<revision>"	BEGIN REVISION;
	{trash}			;
	"</page>"		criaFicheiroHTML(pag); insereTituloIndice(lpags,pag->titulo); BEGIN INITIAL;
}

<TITLE>{
	.*:.*	BEGIN INITIAL;
	[^<]*			printf("%s\n", yytext); insereTitulo(pag,yytext);
	"</title>" 		BEGIN PAGE;
}

<REVISION>{
	{trash}			;
	"<timestamp>"	BEGIN DATE;
	"<username>"	BEGIN AUTHOR;
	\=\=			BEGIN SECTION;
	\=\=\=			;
	\[\[[^:\|\]]+/\]\]	insereLinkInt(pag,yytext+2); //printf("LI %s\n",yytext+2); count++;
	\[\[[^:\|\]]+/\|	insereLinkInt(pag,yytext+2); //printf("LIB %s\n",yytext+2); count++;
	"http://"		BEGIN LINKEXT;
	"</revision>"	BEGIN PAGE;
}

<DATE>{
	[^<]*			insereData(pag,yytext); //printf("%s\n", yytext);
	"</timestamp>" 	BEGIN REVISION; //printf("FIM DATA");
}

<AUTHOR>{
	[^<]*			insereAutor(pag,yytext); //printf("%s\n", yytext);
	"</username>"	BEGIN REVISION; //printf("FIM AUTOR");
}

<SECTION>{			
	[^=]*			insereSeccao(pag,yytext); //printf("S %s\n", yytext);
	== 				BEGIN REVISION; //printf("FIM SECTION");
}

<LINKEXT>{
	[a-zA-Z0-9/\.\-\_\?\=\&\;\+\-\%]+	insereLinkExt(pag,yytext); ext++; BEGIN REVISION; //printf("LEXT %s\n", yytext); 
}

{trash}           {;} 

<<EOF>> 	{ return 0; }

%%
int main(int argc, char *argv[]) {
	if(argc == 1) {
		yyin = stdin;
		yylex();
	} else {
		int i;
		for(i=1; i<argc; i++) {
			yyin = fopen(argv[i],"r");

			lpags = iniciaIndiceTitulo();
			yylex();
			fclose(yyin);
		}
		criaIndexHTML(lpags);
	}
	return 0;
}